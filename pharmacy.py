# -*- coding: utf-8 -*-
"""pharmacy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CjCGTZp2R77uMUdFGdQxtGfSeVP6E8cx
"""

!pip install pandas

import pandas as pd

# CSV file to store medicine data
pharmacy_file = "pharmacy.csv"

# ‚úÖ Function to initialize the CSV file
def initialize_file():
    df = pd.DataFrame(columns=["Medicine ID", "Name", "Price", "Quantity", "Expiry Date"])
    df.to_csv(pharmacy_file, index=False)

initialize_file()
print("‚úÖ Pharmacy system initialized successfully!")

import pandas as pd

# ‚úÖ Function to add a new medicine
def add_medicine(medicine_id, name, price, quantity, expiry_date):
    df = pd.read_csv(pharmacy_file)

    if medicine_id in df["Medicine ID"].values:
        return "‚ö†Ô∏è Medicine ID already exists!"

    new_medicine = pd.DataFrame([{
        "Medicine ID": medicine_id,
        "Name": name,
        "Price": price,
        "Quantity": quantity,
        "Expiry Date": expiry_date
    }])

    df = pd.concat([df, new_medicine], ignore_index=True)
    df.to_csv(pharmacy_file, index=False)

    return f"‚úÖ Medicine {name} added successfully!"

# ‚úÖ Test the function
print(add_medicine(1, "Paracetamol", 5.99, 100, "2026-12-31"))
print(add_medicine(2, "Ibuprofen", 7.50, 50, "2025-08-20"))

import pandas as pd

# ‚úÖ Function to add a new medicine
def add_medicine(medicine_id, name, price, quantity, expiry_date):
    df = pd.read_csv(pharmacy_file)

    if medicine_id in df["Medicine ID"].values:
        return "‚ö†Ô∏è Medicine ID already exists!"

    new_medicine = pd.DataFrame([{
        "Medicine ID": medicine_id,
        "Name": name,
        "Price": price,
        "Quantity": quantity,
        "Expiry Date": expiry_date
    }])

    df = pd.concat([df, new_medicine], ignore_index=True)
    df.to_csv(pharmacy_file, index=False)

    return f"‚úÖ Medicine {name} added successfully!"

# ‚úÖ Test the function
print(add_medicine(1, "Paracetamol", 5.99, 100, "2026-12-31"))
print(add_medicine(2, "Ibuprofen", 7.50, 50, "2025-08-20"))

# ‚úÖ Function to view all medicines
def view_inventory():
    df = pd.read_csv(pharmacy_file)

    if df.empty:
        return "‚ö†Ô∏è No medicines in stock!"

    return df  # Display all medicines

# ‚úÖ Test the function
print(view_inventory())

# ‚úÖ Function to search for a medicine by name
def search_medicine(name):
    df = pd.read_csv(pharmacy_file)

    # Convert input name to lowercase for case-insensitive search
    result = df[df["Name"].str.lower() == name.lower()]

    if result.empty:
        return "‚ö†Ô∏è Medicine not found!"

    return result  # Display medicine details

# ‚úÖ Test the function
print(search_medicine("Paracetamol"))
print(search_medicine("Ibuprofen"))

# ‚úÖ Function to update the stock quantity of a medicine
def update_stock(medicine_id, new_quantity):
    df = pd.read_csv(pharmacy_file)

    if medicine_id not in df["Medicine ID"].values:
        return "‚ö†Ô∏è Medicine ID not found!"

    df.loc[df["Medicine ID"] == medicine_id, "Quantity"] = new_quantity
    df.to_csv(pharmacy_file, index=False)

    return f"‚úÖ Stock updated! New quantity: {new_quantity}"

# ‚úÖ Test the function
print(update_stock(1, 120))  # Update Paracetamol quantity to 120
print(update_stock(2, 30))   # Update Ibuprofen quantity to 30

from datetime import datetime

# ‚úÖ Function to remove expired medicines
def remove_expired_medicines():
    df = pd.read_csv(pharmacy_file)

    today = datetime.today().strftime("%Y-%m-%d")

    df = df[df["Expiry Date"] > today]  # Keep only non-expired medicines
    df.to_csv(pharmacy_file, index=False)

    return "‚úÖ Expired medicines removed!"

# ‚úÖ Test the function
print(remove_expired_medicines())
print(view_inventory())  # View updated inventory

# ‚úÖ Function to export pharmacy inventory as CSV
def export_inventory():
    df = pd.read_csv(pharmacy_file)

    if df.empty:
        return "‚ö†Ô∏è No data to export!"

    df.to_csv("pharmacy_inventory_backup.csv", index=False)
    return "‚úÖ Inventory exported successfully as 'pharmacy_inventory_backup.csv'!"

# ‚úÖ Test the function
print(export_inventory())

from google.colab import files

files.download("pharmacy_inventory_backup.csv")

!git config --global user.name "YourGitHubUsername"
!git config --global user.email "YourGitHubEmail"

from google.colab import files

# Download pharmacy.csv (inventory data)
files.download("pharmacy.csv")

files.download("pharmacy_inventory_backup.csv")
files.download("pharmacy_management.py")  # If you saved the script

!ls -lh

from google.colab import files
files.download("pharmacy.csv")

files.download("pharmacy_inventory_backup.csv")

files.download("pharmacy_management.py")

with open("pharmacy_management.py", "w") as f:
    f.write("# Pharmacy Management System Code\n")

!pip install streamlit

with open("app.py", "w") as f:
    f.write("""
import streamlit as st
import pandas as pd

# Load Pharmacy Data
pharmacy_file = "pharmacy.csv"

# Title of the Web App
st.title("Pharmacy Management System")

# Load Data
def load_data():
    return pd.read_csv(pharmacy_file)

df = load_data()

# View Inventory
st.subheader("üìã View Medicine Inventory")
st.dataframe(df)

# Search Medicine
search = st.text_input("üîç Search Medicine by Name")
if search:
    result = df[df["Name"].str.lower().str.contains(search.lower())]
    st.dataframe(result)

# Add Medicine
st.subheader("‚ûï Add New Medicine")
med_name = st.text_input("Medicine Name")
med_price = st.number_input("Price", min_value=0.0, format="%.2f")
med_quantity = st.number_input("Quantity", min_value=0)
med_expiry = st.date_input("Expiry Date")

if st.button("Add Medicine"):
    new_data = pd.DataFrame([{
        "Medicine ID": len(df) + 1,
        "Name": med_name,
        "Price": med_price,
        "Quantity": med_quantity,
        "Expiry Date": med_expiry
    }])
    df = pd.concat([df, new_data], ignore_index=True)
    df.to_csv(pharmacy_file, index=False)
    st.success(f"‚úÖ {med_name} added successfully!")

""")
print("‚úÖ Streamlit app created successfully!")

!streamlit run app.py

!git add app.py
!git commit -m "Added Streamlit Web App"
!git push origin main

from google.colab import files

uploaded = files.upload()  # This will ask you to upload your pharmacy CSV file

import pandas as pd

# Load the existing CSV file
df = pd.read_csv("pharmacy_inventory.csv")

# Create new medicines as a dictionary
new_medicines = {
    "Medicine ID": [3, 4, 5, 6, 7],
    "Name": ["Amoxicillin", "Aspirin", "Cetirizine", "Dolo-650", "Azithromycin"],
    "Price": [10.50, 8.25, 6.75, 12.00, 15.00],
    "Quantity": [50, 70, 45, 100, 60],
    "Expiry Date": ["2025-12-15", "2026-06-10", "2025-10-05", "2026-09-22", "2027-03-30"]
}

# Convert to DataFrame and append to the existing data
new_df = pd.DataFrame(new_medicines)
df = pd.concat([df, new_df], ignore_index=True)

# Display the updated table
df

from google.colab import files

uploaded = files.upload()  # This will open a file upload dialog

import os

if "pharmacy_inventory.csv" in os.listdir():
    print("‚úÖ File uploaded successfully!")
else:
    print("‚ö†Ô∏è File not found! Please upload it again.")
import os

if "pharmacy_inventory.csv" in os.listdir():
    print("‚úÖ File uploaded successfully!")
else:
    print("‚ö†Ô∏è File not found! Please upload it again.")

import pandas as pd
import random
from datetime import datetime, timedelta

# Generate 50 sample medicines
medicine_names = [
    "Paracetamol", "Ibuprofen", "Aspirin", "Cetirizine", "Amoxicillin",
    "Azithromycin", "Dolo-650", "Metformin", "Omeprazole", "Pantoprazole",
    "Losartan", "Amlodipine", "Simvastatin", "Atorvastatin", "Levothyroxine",
    "Metoprolol", "Clopidogrel", "Hydrochlorothiazide", "Salbutamol", "Ranitidine",
    "Esomeprazole", "Naproxen", "Tramadol", "Fluoxetine", "Sertraline",
    "Gabapentin", "Ciprofloxacin", "Loratadine", "Diclofenac", "Prednisolone",
    "Furosemide", "Warfarin", "Insulin", "Vitamin C", "Calcium", "Iron Tablets",
    "Multivitamin", "Zinc", "Magnesium", "B-Complex", "Dextromethorphan",
    "Antacid", "ORS", "Glucose-D", "Albendazole", "Mebendazole", "Cetrimide",
    "Betadine", "Neosporin", "Chlorpheniramine"
]

data = []
for i in range(1, 51):
    med = {
        "Medicine ID": i,
        "Name": medicine_names[i-1],
        "Price": round(random.uniform(5, 50), 2),
        "Quantity": random.randint(10, 100),
        "Expiry Date": (datetime.now() + timedelta(days=random.randint(365, 1825))).strftime('%Y-%m-%d')
    }
    data.append(med)

# Create DataFrame
df = pd.DataFrame(data)

# Save to CSV
df.to_csv("pharmacy_inventory.csv", index=False)

# Show preview
df.head(10)

from google.colab import files
files.download("pharmacy_inventory.csv")